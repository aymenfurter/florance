name: Deploy to Azure Container Apps and APIM

on:
  workflow_dispatch

env:
  RESOURCE_GROUP: florance-rg
  CHAT_APP_NAME: florance-chat-app
  WEBUI_APP_NAME: florance-webui-app
  VNET_NAME: florance-vnet
  APIM_NAME: florance-apim
  ENV_NAME: florance
  LOCATION: switzerlandnorth
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create resource group
        run: |
          az group create --name ${{ env.RESOURCE_GROUP }} --location ${{ env.LOCATION }}

      - name: Deploy chat app to Azure Container Apps
        run: |
          az config set extension.use_dynamic_install=yes_without_prompt
          az containerapp env create --name ${{ env.ENV_NAME }} --resource-group ${{ env.RESOURCE_GROUP }}
          az containerapp create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --name ${{ env.CHAT_APP_NAME }} \
            --image ghcr.io/aymenfurter/florencellm/chat:fc3bcdd22f94939ed148e2e6f1836e891ac8d618 \
            --environment ${{ env.ENV_NAME }} \
            --ingress internal \
            --secrets pineconeapikey="${{ secrets.PINECONE_API_KEY }}" \
              pineconeapiurl="${{ secrets.PINECONE_API_URL }}" \
              pineconeindexname="${{ secrets.PINECONE_INDEX_NAME }}" \
              pineconeprojectname="${{ secrets.PINECONE_PROJECT_NAME }}" \
              pineconeenv="${{ secrets.PINECONE_ENV }}" \
              openaikey="${{ secrets.OPEN_AI_KEY }}" \
            --env-vars PINECONE_API_KEY=secretref:pineconeapikey \
              PINECONE_API_URL=secretref:pineconeapiurl \
              PINECONE_INDEX_NAME=secretref:pineconeindexname \
              PINECONE_PROJECT_NAME=secretref:pineconeprojectname \
              PINECONE_ENV=secretref:pineconeenv \
              OPEN_AI_KEY=secretref:openaikey \
            --target-port 8080
            az containerapp create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.ENV_NAME }} \
            --name ${{ env.WEBUI_APP_NAME }} \
            --ingress internal \
            --image ghcr.io/aymenfurter/florencellm/webui:fc3bcdd22f94939ed148e2e6f1836e891ac8d618 \
            --target-port 80
            az containerapp create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.ENV_NAME }} \
            --name "traefik" \
            --ingress external \
            --image ghcr.io/aymenfurter/florance/florance-traefik:92ccadf \
            --target-port 80            
      - name: Deploy traefik-forward-auth
        run: |
          az containerapp create \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.ENV_NAME }} \
            --name "auth" \
            --image thomseddon/traefik-forward-auth:2.2 \
            --ingress external \
            --secrets githubclientid="${{ secrets.GH_CLIENT_ID }}" \
              githubclientsecret="${{ secrets.GH_CLIENT_SECRET }}" \
              oidcsecret="${{ secrets.OIDC_TOKEN }}" \
            --env-vars PROVIDERS_GENERIC_OAUTH_AUTH_URL=https://github.com/login/oauth/authorize \
              PROVIDERS_GENERIC_OAUTH_TOKEN_URL=https://github.com/login/oauth/access_token \
              PROVIDERS_GENERIC_OAUTH_USER_URL=https://api.github.com/user \
              PROVIDERS_GENERIC_OAUTH_CLIENT_ID=secretref:githubclientid \
              PROVIDERS_GENERIC_OAUTH_CLIENT_SECRET=secretref:githubclientsecret \
              WHITELIST=${{ secrets.ALLOWED_EMAILS }} \
              WHITELIST=${{ secrets.ALLOWED_EMAILS }} \
              PROVIDERS_GENERIC_OAUTH_SCOPE="read:user" \
              SECRET=secretref:oidcsecret \
              INSECURE_COOKIE=false \
            --target-port 4181
