name: Build and Publish Docker Images

on:
  workflow_dispatch:

jobs:
  build_and_publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHTOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push chat image
        uses: docker/build-push-action@v2
        with:
          context: ./chat
          push: true
          tags: ghcr.io/${{ github.repository }}/chat:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Build and push webui image
        uses: docker/build-push-action@v2
        with:
          context: ./webui
          push: true
          tags: ghcr.io/${{ github.repository }}/webui:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          build-args: |
            QUESTION_1=${{ secrets.QUESTION_1 }}
            QUESTION_2=${{ secrets.QUESTION_2 }}
            QUESTION_3=${{ secrets.QUESTION_3 }}
            QUESTION_4=${{ secrets.QUESTION_4 }}
            TARGET_URL=${{ secrets.TARGET_URL }}
  set-env:
    name: Set Environment Variables
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.main.outputs.version }}
      created: ${{ steps.main.outputs.created }}
      image: ${{ steps.main.outputs.image }}
      repository: ${{ steps.main.outputs.repository }}  
    steps:
      - id: main
        run: |
          echo ::set-output name=version::$(echo ${GITHUB_SHA} | cut -c1-7)
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=image::florance-traefik
          echo ::set-output name=repository::ghcr.io/aymenfurter/florance

  package-service:
    name: Package Service
    runs-on: ubuntu-latest
    needs: set-env
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Replace example.com/auth with AUTH_URL
        run: |
          sed -i "s#https://example.com/auth#${{ env.AUTH_URL }}#g" traefik/traefik.yaml
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHTOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: traefik/Dockerfile
          push: true
          tags: |
            ${{ needs.set-env.outputs.repository }}/${{ needs.set-env.outputs.image }}:latest
            ${{ needs.set-env.outputs.repository }}/${{ needs.set-env.outputs.image }}:${{ needs.set-env.outputs.version }}
          labels: |
            org.opencontainers.image.source=${{ github.repositoryUrl }}
            org.opencontainers.image.created=${{ needs.set-env.outputs.created }}
            org.opencontainers.image.revision=${{ needs.set-env.outputs.version }}
